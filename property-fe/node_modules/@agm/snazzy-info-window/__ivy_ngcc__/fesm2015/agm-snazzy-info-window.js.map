{"version":3,"file":"agm-snazzy-info-window.js","sources":["@agm/snazzy-info-window/directives/snazzy-info-window.ts","@agm/snazzy-info-window/snazzy-info-window.module.ts","@agm/snazzy-info-window/index.ts","@agm/snazzy-info-window/agm-snazzy-info-window.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["import { AgmMarker, GoogleMapsAPIWrapper, MapsAPILoader, MarkerManager } from '@agm/core';\nimport { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Host, Input, OnChanges, OnDestroy, Optional, Output, SimpleChanges, SkipSelf, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\n\ndeclare var require: any;\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'agm-snazzy-info-window',\n  template: '<div #outerWrapper><div #viewContainer></div></div><ng-content></ng-content>',\n})\nexport class AgmSnazzyInfoWindow implements AfterViewInit, OnDestroy, OnChanges {\n  /**\n   * The latitude and longitude where the info window is anchored.\n   * The offset will default to 0px when using this option. Only required/used if you are not using a agm-marker.\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude where the info window is anchored.\n   * The offset will default to 0px when using this option. Only required/used if you are not using a agm-marker.\n   */\n  @Input() longitude: number;\n\n  /**\n   * Changes the open status of the snazzy info window.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Emits when the open status changes.\n   */\n  @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Choose where you want the info window to be displayed, relative to the marker.\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n\n  /**\n   * The max width in pixels of the info window.\n   */\n  @Input() maxWidth: number | string = 200;\n\n  /**\n   * The max height in pixels of the info window.\n   */\n  @Input() maxHeight: number | string = 200;\n\n  /**\n   * The color to use for the background of the info window.\n   */\n  @Input() backgroundColor: string;\n\n  /**\n   * A custom padding size around the content of the info window.\n   */\n  @Input() padding: string;\n\n  /**\n   * A custom border around the info window. Set to false to completely remove the border.\n   * The units used for border should be the same as pointer.\n   */\n  @Input() border: {width: string; color: string} | boolean;\n\n  /**\n   * A custom CSS border radius property to specify the rounded corners of the info window.\n   */\n  @Input() borderRadius: string;\n\n  /**\n   * The font color to use for the content inside the body of the info window.\n   */\n  @Input() fontColor: string;\n\n  /**\n   * The font size to use for the content inside the body of the info window.\n   */\n  @Input() fontSize: string;\n\n  /**\n   * The height of the pointer from the info window to the marker.\n   * Set to false to completely remove the pointer.\n   * The units used for pointer should be the same as border.\n   */\n  @Input() pointer: string | boolean;\n\n  /**\n   * The CSS properties for the shadow of the info window.\n   * Set to false to completely remove the shadow.\n   */\n  @Input() shadow: boolean | {h?: string, v?: string, blur: string, spread: string, opacity: number, color: string};\n\n  /**\n   * Determines if the info window will open when the marker is clicked.\n   * An internal listener is added to the Google Maps click event which calls the open() method.\n   */\n  @Input() openOnMarkerClick = true;\n\n  /**\n   * Determines if the info window will close when the map is clicked. An internal listener is added to the Google Maps click event which calls the close() method.\n   * This will not activate on the Google Maps drag event when the user is panning the map.\n   */\n  @Input() closeOnMapClick = true;\n\n  /**\n   * An optional CSS class to assign to the wrapper container of the info window.\n   * Can be used for applying custom CSS to the info window.\n   */\n  @Input() wrapperClass: string;\n\n  /**\n   * Determines if the info window will close when any other Snazzy Info Window is opened.\n   */\n  @Input() closeWhenOthersOpen = false;\n\n  /**\n   * Determines if the info window will show a close button.\n   */\n  @Input() showCloseButton = true;\n\n  /**\n   * Determines if the info window will be panned into view when opened.\n   */\n  @Input() panOnOpen = true;\n\n  /**\n   * Emits before the info window opens.\n   */\n  @Output() beforeOpen: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits before the info window closes.\n   */\n  @Output() afterClose: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * @internal\n   */\n  @ViewChild('outerWrapper', {read: ElementRef, static: false}) _outerWrapper: ElementRef;\n\n  /**\n   * @internal\n   */\n  @ViewChild('viewContainer', {read: ViewContainerRef, static: false}) _viewContainerRef: ViewContainerRef;\n\n  /**\n   * @internal\n   */\n  @ContentChild(TemplateRef, {static: false}) _templateRef: TemplateRef<any>;\n\n  protected _nativeSnazzyInfoWindow: any;\n  protected _snazzyInfoWindowInitialized: Promise<any> | null = null;\n\n  constructor(\n    @Optional() @Host() @SkipSelf() private _marker: AgmMarker,\n    private _wrapper: GoogleMapsAPIWrapper,\n    private _manager: MarkerManager,\n    private _loader: MapsAPILoader,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._nativeSnazzyInfoWindow == null) {\n      return;\n    }\n    if ('isOpen' in changes && this.isOpen) {\n      this._openInfoWindow();\n    } else if ('isOpen' in changes && !this.isOpen) {\n      this._closeInfoWindow();\n    }\n    if (('latitude' in changes || 'longitude' in changes) && this._marker == null) {\n      this._updatePosition();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngAfterViewInit() {\n    const m = this._manager != null ? this._manager.getNativeMarker(this._marker) : null;\n    this._snazzyInfoWindowInitialized = this._loader.load()\n      .then(() => require('snazzy-info-window'))\n      .then((module: any) => Promise.all([module, m, this._wrapper.getNativeMap()]))\n      .then((elems) => {\n        const options: any = {\n          map: elems[2],\n          content: '',\n          placement: this.placement,\n          maxWidth: this.maxWidth,\n          maxHeight: this.maxHeight,\n          backgroundColor: this.backgroundColor,\n          padding: this.padding,\n          border: this.border,\n          borderRadius: this.borderRadius,\n          fontColor: this.fontColor,\n          pointer: this.pointer,\n          shadow: this.shadow,\n          closeOnMapClick: this.closeOnMapClick,\n          openOnMarkerClick: this.openOnMarkerClick,\n          closeWhenOthersOpen: this.closeWhenOthersOpen,\n          showCloseButton: this.showCloseButton,\n          panOnOpen: this.panOnOpen,\n          wrapperClass: this.wrapperClass,\n          callbacks: {\n            beforeOpen: () => {\n              this._createViewContent();\n              this.beforeOpen.emit();\n            },\n            afterOpen: () => {\n              this.isOpenChange.emit(this.openStatus());\n            },\n            afterClose: () => {\n              this.afterClose.emit();\n              this.isOpenChange.emit(this.openStatus());\n            },\n          },\n        };\n        if (elems[1] != null) {\n          options.marker = elems[1];\n        } else {\n          options.position = {\n            lat: this.latitude,\n            lng: this.longitude,\n          };\n        }\n        this._nativeSnazzyInfoWindow = new elems[0](options);\n      });\n      this._snazzyInfoWindowInitialized.then(() => {\n        if (this.isOpen) {\n          this._openInfoWindow();\n        }\n      });\n  }\n\n  protected _openInfoWindow() {\n    this._snazzyInfoWindowInitialized.then(() => {\n      this._createViewContent();\n      this._nativeSnazzyInfoWindow.open();\n    });\n  }\n\n  protected _closeInfoWindow() {\n    this._snazzyInfoWindowInitialized.then(() => {\n      this._nativeSnazzyInfoWindow.close();\n    });\n  }\n\n  protected _createViewContent() {\n    if (this._viewContainerRef.length === 1) {\n      return;\n    }\n    const evr = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    this._nativeSnazzyInfoWindow.setContent(this._outerWrapper.nativeElement);\n    // we have to run this in a separate cycle.\n    setTimeout(() => {\n      evr.detectChanges();\n    });\n  }\n\n  protected _updatePosition() {\n    this._nativeSnazzyInfoWindow.setPosition({\n      lat: this.latitude,\n      lng: this.longitude,\n    });\n  }\n\n  /**\n   * Returns true when the Snazzy Info Window is initialized and open.\n   */\n  openStatus(): boolean {\n    return this._nativeSnazzyInfoWindow && this._nativeSnazzyInfoWindow.isOpen();\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    if (this._nativeSnazzyInfoWindow) {\n      this._nativeSnazzyInfoWindow.destroy();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AgmSnazzyInfoWindow } from './directives/snazzy-info-window';\n\n@NgModule({\n  declarations: [AgmSnazzyInfoWindow],\n  exports: [AgmSnazzyInfoWindow],\n})\nexport class AgmSnazzyInfoWindowModule {}\n","// public API\nexport { AgmSnazzyInfoWindowModule } from './snazzy-info-window.module';\nexport { AgmSnazzyInfoWindow } from './directives/snazzy-info-window';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}