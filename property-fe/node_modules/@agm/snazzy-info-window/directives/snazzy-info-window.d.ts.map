{"version":3,"file":"snazzy-info-window.d.ts","sources":["snazzy-info-window.d.ts"],"names":[],"mappingssourcesContent":["import { AgmMarker, GoogleMapsAPIWrapper, MapsAPILoader, MarkerManager } from '@agm/core';\nimport { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nexport declare class AgmSnazzyInfoWindow implements AfterViewInit, OnDestroy, OnChanges {\n    private _marker;\n    private _wrapper;\n    private _manager;\n    private _loader;\n    /**\n     * The latitude and longitude where the info window is anchored.\n     * The offset will default to 0px when using this option. Only required/used if you are not using a agm-marker.\n     */\n    latitude: number;\n    /**\n     * The longitude where the info window is anchored.\n     * The offset will default to 0px when using this option. Only required/used if you are not using a agm-marker.\n     */\n    longitude: number;\n    /**\n     * Changes the open status of the snazzy info window.\n     */\n    isOpen: boolean;\n    /**\n     * Emits when the open status changes.\n     */\n    isOpenChange: EventEmitter<boolean>;\n    /**\n     * Choose where you want the info window to be displayed, relative to the marker.\n     */\n    placement: 'top' | 'bottom' | 'left' | 'right';\n    /**\n     * The max width in pixels of the info window.\n     */\n    maxWidth: number | string;\n    /**\n     * The max height in pixels of the info window.\n     */\n    maxHeight: number | string;\n    /**\n     * The color to use for the background of the info window.\n     */\n    backgroundColor: string;\n    /**\n     * A custom padding size around the content of the info window.\n     */\n    padding: string;\n    /**\n     * A custom border around the info window. Set to false to completely remove the border.\n     * The units used for border should be the same as pointer.\n     */\n    border: {\n        width: string;\n        color: string;\n    } | boolean;\n    /**\n     * A custom CSS border radius property to specify the rounded corners of the info window.\n     */\n    borderRadius: string;\n    /**\n     * The font color to use for the content inside the body of the info window.\n     */\n    fontColor: string;\n    /**\n     * The font size to use for the content inside the body of the info window.\n     */\n    fontSize: string;\n    /**\n     * The height of the pointer from the info window to the marker.\n     * Set to false to completely remove the pointer.\n     * The units used for pointer should be the same as border.\n     */\n    pointer: string | boolean;\n    /**\n     * The CSS properties for the shadow of the info window.\n     * Set to false to completely remove the shadow.\n     */\n    shadow: boolean | {\n        h?: string;\n        v?: string;\n        blur: string;\n        spread: string;\n        opacity: number;\n        color: string;\n    };\n    /**\n     * Determines if the info window will open when the marker is clicked.\n     * An internal listener is added to the Google Maps click event which calls the open() method.\n     */\n    openOnMarkerClick: boolean;\n    /**\n     * Determines if the info window will close when the map is clicked. An internal listener is added to the Google Maps click event which calls the close() method.\n     * This will not activate on the Google Maps drag event when the user is panning the map.\n     */\n    closeOnMapClick: boolean;\n    /**\n     * An optional CSS class to assign to the wrapper container of the info window.\n     * Can be used for applying custom CSS to the info window.\n     */\n    wrapperClass: string;\n    /**\n     * Determines if the info window will close when any other Snazzy Info Window is opened.\n     */\n    closeWhenOthersOpen: boolean;\n    /**\n     * Determines if the info window will show a close button.\n     */\n    showCloseButton: boolean;\n    /**\n     * Determines if the info window will be panned into view when opened.\n     */\n    panOnOpen: boolean;\n    /**\n     * Emits before the info window opens.\n     */\n    beforeOpen: EventEmitter<void>;\n    /**\n     * Emits before the info window closes.\n     */\n    afterClose: EventEmitter<void>;\n    /**\n     * @internal\n     */\n    _outerWrapper: ElementRef;\n    /**\n     * @internal\n     */\n    _viewContainerRef: ViewContainerRef;\n    /**\n     * @internal\n     */\n    _templateRef: TemplateRef<any>;\n    protected _nativeSnazzyInfoWindow: any;\n    protected _snazzyInfoWindowInitialized: Promise<any> | null;\n    constructor(_marker: AgmMarker, _wrapper: GoogleMapsAPIWrapper, _manager: MarkerManager, _loader: MapsAPILoader);\n    /**\n     * @internal\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * @internal\n     */\n    ngAfterViewInit(): void;\n    protected _openInfoWindow(): void;\n    protected _closeInfoWindow(): void;\n    protected _createViewContent(): void;\n    protected _updatePosition(): void;\n    /**\n     * Returns true when the Snazzy Info Window is initialized and open.\n     */\n    openStatus(): boolean;\n    /**\n     * @internal\n     */\n    ngOnDestroy(): void;\n}\n"]}